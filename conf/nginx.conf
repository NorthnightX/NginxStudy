
#user  nobody;
user ntx;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

daemon on;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
    accept_mutex on;
    multi_accept on;
    use epoll;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
	
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    log_format myformat '$http_user_agent - $request - $remote_addr';
    access_log logs/my.log myformat;
    sendfile        on;
    tcp_nopush    on;
    tcp_nodelay on;
    #tcp_nopush     on;
    
    #keepalive_timeout  0;
    keepalive_timeout  65;
    keepalive_requests 100;
    include nginx_gzip_conf;
    gzip_static on;
    server {
	listen 11111;
	server_name localhost;
	location /server {
		set $name Tom;
		set $age 18;
		default_type text/plain;
		return 200 $name=$age=$args=$http_user_agent=$host=$remote_addr;
 	}
	location /testif{
		set $username 'oi';
		default_type text/plain;
	#	if ($args){
	#		return 200 success;
	#	}
		if ($request_method = POST){
			return 200 success;
		}
		if ($http_user_agent ~* Safari){
			return 200 Chorme;
		}
		return 200 error;

	}
	location /testbreak{
		default_type text/plain;
		set $username Tmo;
		if ($args){
			set $username Jerrry;
			break;
			set $username rose;
		}
		add_header username $username;
		return 200 $username;
	}
    }
    server {
        listen      11180;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #location ~ .*\.(html|js|css|png)$ {
	        #expires -1000;
		#expires max;
		#add_header Cache_Control no-store
		#add_header Access-Control-Allow-Origin *;
		#add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE;
		#valid_referers none blocked www.baiducom;
		#if ($invalid_referer){
		#	return 403;
		#	}
        #	}
        location /iamges{
		root html;
		valid_referers none blocked www.baidu.com;
		if ($invalid_referer){
			return 403;
		}
	}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
